{"version":3,"file":"download-source.worker-MDfWiJzP.js","sources":["../../src/main/workers/download-source.worker.ts"],"sourcesContent":["import { downloadSourceSchema } from \"@main/events/helpers/validators\";\nimport { DownloadSourceStatus } from \"@shared\";\nimport type { DownloadSource, GameRepack } from \"@types\";\nimport axios, { AxiosError, AxiosHeaders } from \"axios\";\nimport { z } from \"zod\";\n\nexport type DownloadSourceResponse = z.infer<typeof downloadSourceSchema> & {\n  etag: string | null;\n  status: DownloadSourceStatus;\n};\n\nexport const getUpdatedRepacks = async (downloadSources: DownloadSource[]) => {\n  const results: DownloadSourceResponse[] = [];\n\n  for (const downloadSource of downloadSources) {\n    const headers = new AxiosHeaders();\n\n    if (downloadSource.etag) {\n      headers.set(\"If-None-Match\", downloadSource.etag);\n    }\n\n    try {\n      const response = await axios.get(downloadSource.url, {\n        headers,\n      });\n\n      const source = downloadSourceSchema.parse(response.data);\n\n      results.push({\n        ...downloadSource,\n        downloads: source.downloads,\n        etag: response.headers[\"etag\"],\n        status: DownloadSourceStatus.UpToDate,\n      });\n    } catch (err: unknown) {\n      const isNotModified = (err as AxiosError).response?.status === 304;\n\n      results.push({\n        ...downloadSource,\n        downloads: [],\n        etag: null,\n        status: isNotModified\n          ? DownloadSourceStatus.UpToDate\n          : DownloadSourceStatus.Errored,\n      });\n    }\n  }\n\n  return results;\n};\n\nexport const validateDownloadSource = async ({\n  url,\n  repacks,\n}: {\n  url: string;\n  repacks: GameRepack[];\n}) => {\n  const response = await axios.get(url);\n\n  const source = downloadSourceSchema.parse(response.data);\n\n  const existingUris = source.downloads\n    .flatMap((download) => download.uris)\n    .filter((uri) => repacks.some((repack) => repack.magnet === uri));\n\n  return {\n    name: source.name,\n    downloadCount: source.downloads.length - existingUris.length,\n  };\n};\n"],"names":["getUpdatedRepacks","downloadSources","results","downloadSource","headers","AxiosHeaders","etag","set","response","axios","get","url","source","downloadSourceSchema","parse","data","push","downloads","status","DownloadSourceStatus","UpToDate","err","isNotModified","Errored","validateDownloadSource","repacks","existingUris","flatMap","download","uris","filter","uri","some","repack","magnet","name","downloadCount","length"],"mappings":"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"}