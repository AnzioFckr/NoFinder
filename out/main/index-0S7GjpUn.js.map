{"version":3,"file":"index-0S7GjpUn.js","sources":["../../src/shared/index.ts"],"sourcesContent":["export enum Downloader {\n  RealDebrid,\n  Torrent,\n}\n\nexport enum DownloadSourceStatus {\n  UpToDate,\n  Errored,\n}\n\nexport class UserNotLoggedInError extends Error {\n  constructor() {\n    super(\"user not logged in\");\n    this.name = \"UserNotLoggedInError\";\n  }\n}\n\nconst FORMAT = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\nexport const formatBytes = (bytes: number): string => {\n  if (!Number.isFinite(bytes) || isNaN(bytes) || bytes <= 0) {\n    return `0 ${FORMAT[0]}`;\n  }\n\n  const byteKBase = 1024;\n\n  const base = Math.floor(Math.log(bytes) / Math.log(byteKBase));\n\n  const formatedByte = bytes / byteKBase ** base;\n\n  return `${Math.trunc(formatedByte * 10) / 10} ${FORMAT[base]}`;\n};\n\nexport const pipe =\n  <T>(...fns: ((arg: T) => any)[]) =>\n  (arg: T) =>\n    fns.reduce((prev, fn) => fn(prev), arg);\n\nexport const removeReleaseYearFromName = (name: string) =>\n  name.replace(/\\([0-9]{4}\\)/g, \"\");\n\nexport const removeSymbolsFromName = (name: string) =>\n  name.replace(/[^A-Za-z 0-9]/g, \"\");\n\nexport const removeSpecialEditionFromName = (name: string) =>\n  name.replace(\n    /(The |Digital )?(GOTY|Deluxe|Standard|Ultimate|Definitive|Enhanced|Collector's|Premium|Digital|Limited|Game of the Year|Reloaded|[0-9]{4}) Edition/g,\n    \"\"\n  );\n\nexport const removeDuplicateSpaces = (name: string) =>\n  name.replace(/\\s{2,}/g, \" \");\n\nexport const replaceUnderscoreWithSpace = (name: string) =>\n  name.replace(/_/g, \" \");\n\nexport const formatName = pipe<string>(\n  removeReleaseYearFromName,\n  removeSpecialEditionFromName,\n  replaceUnderscoreWithSpace,\n  (str) => str.replace(/DIRECTOR'S CUT/g, \"\"),\n  removeSymbolsFromName,\n  removeDuplicateSpaces,\n  (str) => str.trim()\n);\n"],"names":["Downloader","DownloadSourceStatus","UserNotLoggedInError","Error","constructor","name","pipe","fns","arg","reduce","prev","fn","removeReleaseYearFromName","replace","removeSymbolsFromName","removeSpecialEditionFromName","removeDuplicateSpaces","replaceUnderscoreWithSpace","formatName","str","trim"],"mappings":"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"}